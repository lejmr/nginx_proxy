---
  - name: Prepare directory to export through proxy
    file: path="{{certbot_root}}/{{domain}}/.well-known" state=directory owner=nginx group=nginx

  - name: Install certbot
    package: name=certbot state=latest

  - name: Defining certbot command
    set_fact:
       cmd: "certbot certonly --webroot -w {{certbot_root}}/{{domain}}/ --noninteractive --agree-tos --email {{cerbot_email}} -d {{domain}}"
  
  - name: Force renew
    set_fact:
       cmd: "{{cmd}} --force-renewal"
    when: force_renew|default(False)
  
  # Preparing command
  - name: Adding aliases
    set_fact:
       cmd: "{{cmd}} -d {{item}}.{{domain}}"
    with_items: "{{alias}}"
    when: alias is defined

  - name: Adding domain aliases
    set_fact:
       cmd: "{{cmd}} -d {{item}}"
    with_items: "{{domain_alias}}"
    when: domain_alias is defined
    
  - name: Prepare HTTP only configuration
    template: src=http_part.conf dest="/etc/nginx/conf.d/proxy_{{domain}}.conf"
    register: nginx_config

  - name: Restart proxy server
    service: name="nginx" state=restarted
    when: nginx_config.changed

  - name: Requesting certificate using command
    debug: msg="{{cmd}}"

  - name: Request certificates
    command: "{{cmd}}"

  - name: Configure paths to certificates
    set_fact:
       ssl_path_crt: !!null
       ssl_path_crt: "/etc/letsencrypt/live/{{domain}}/fullchain.pem"
       ssl_path_key: !!null
       ssl_path_key: "/etc/letsencrypt/live/{{domain}}/privkey.pem"

  # TODO: refresh cert only if is close to its expiration

  - name: Register autorefresh cronjob
    cron:
      job: /usr/bin/certbot renew --quiet --renew-hook "systemctl restart nginx"
      special_time: daily
      name: Refresh SSL certificate
      
